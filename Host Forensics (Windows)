                                                         WINDOWS FORENSICS
MFT
------------
The Master File Table (MFT) is the primary source of metadata in NTFS. It contains or indirectly references everything about a file: 
its timestamps, size in bytes, attributes (such as permissions), parent directory, and contents.

Each NTFS volume will contain its own MFT, stored within the volume root as a file named $MFT.

 NTFS metadata files such as the $MFT are not accessible via Windows Explorer or other standard application programming interface (API) 
 file-access methods. 
 
 SI AND FN TIMESTAMPS
 ---------------------
 
 Fortunately, it is a bit more difficult to manipulate the $FN MACE timestamps
 
 Windows uses its $SI timestamps to set the $FN timestamps for the new MFT entry. Restoring the file to its original location and remodifying ensures that all 
 eight MACE timestamps match the desired values. This trick is often referred to as “double-time-stomping.
 
 $DATA
 -------------
 
 is named $DATA. This attribute typically provides a listing of the clusters on disk wherein a file’s contents reside
 
 Recall that a typical MFT entry has a fixed length of 1,024 bytes. That’s a decent amount of headroom for most files—even given 
 the plethora of attributes it tracks. So for efficiency’s sake, NTFS will actually store the complete contents of files under 
 approximately 700–800 bytes within the $DATA attribute itself
 
 
 $LOG
 -----------
 The NTFS log file, named $LogFile, tracks all transactions that change the structure of a volume. That includes file or directory creation/copy/deletes, 
 changes to file metadata, and changes to INDX records.
 
 $JRNAL
 ----------------
 The Update Sequence Number (USN) journal, named $UsnJrnl, provides a higher-level summary of changes to a volume. A given entry includes the type of change event that occurred, its corresponding timestamp, the file name, its attributes, and the MFT entry identifiers for the file and its parent directory. 
 The journal is located in path \$Extend\$UsnJrnl
 
 FILE SYSTEM REDIRECTOR
 ---------------------
 Windows provides a compatibility subsystem, Windows 32-bit on Windows 64-bit (WoW64), that helps ensure 32-bit applications run 
 properly on 64-bit operating systems.
 
  If a 32-bit application attempts to load a file from %SYSTEMROOT%\system32\, then WoW64 will transparently redirect it to the 
  directory %SYSTEMROOT%\SysWOW64\, which contains the proper 32-bit DLLs
 
 the actual %SYSTEMROOT%\system32\directory, which is reserved for 64-bit applications
 
 Windows maintains a separate Program Files directory, called \Program Files (x86)\, for 32-bit applications, 
 whereas 64-bit typically use the normal \Program Files\path.
 
 
 PREFETCH
 -------------
 Prefetch is a performance optimization mechanism that Microsoft introduced in Windows XP to reduce boot and application loading times
 
 Specifically, it tracks the first two minutes of boot processes and the first 10 seconds of all other applications’ startup
 
 Prefetch files are stored in %SYSTEMROOT%\Prefetch
 
 AppName-########.pf  Up to 128 application-specific prefetch files, each with the extension .pf, and each representing an 
 executable file that ran at least once. (def more, maybe 512 max I think or even 1024)
 
 EVENT VIEWER
 ---------------
 
 • Application  %SYSTEMROOT%\System32\Winevt\Logs\Application.evtx
• System  %SYSTEMROOT%\System32\Winevt\Logs\System.evtx
• Security  %SYSTEMROOT%\System32\Winevt\Logs\Security.evtx
 
 WINDOWS LOGON TYPE
 ---------------------
 Here is a brief description of each type:
• Interactive  The user logged on from the console (for example, from the host machine’s keyboard), via the RunAS command, 
  or from a hardware-based remote access solution (such as KVM).
• Network  The user logged on over the network. Mounting a share through the “net use” command or logging on to a web server 
  via IIS integrated authentication are both examples of activity that would generate a Network logon.
• Batch  The logon session generated by a scheduled task.
• Service  The Windows service logged on using its configured credentials.
• Unlock  The user unlocked the system (for example, after resuming from the screensaver).
• NetworkCleartext  Typically generated by basic authentication logins on web servers.
• NewCredentials  The user assumed a different set of credentials for a remote connection (such as through the use of the RunAs command).
• RemoteInteractive  The user logged on via Terminal Services, Remote Assistance, or Remote Desktop.
• CacheInteractive  The user logged on with domain credentials that were validated using locally cached data rather than contacting 
  the domain controller.
  
 Process Tracking
 ------------------------
Process tracking, also known as detailed tracking or process auditing, generates an event in the Security event log every time a 
process is executed or terminated. These events include the full path to the executable on disk, the process ID, 
the parent process ID, and the associated logon ID under which it executed.

every time a service is started or stopped, the Service Control Manager (SCM) creates an entry in the System event log.

.job Files
----------------
Configuration data for scheduled tasks is stored in .job files—one per task—within the %SYSTEMROOT%\Tasks directory

%SYSTEMROOT%\Tasks\SchedLgU.txt - Task Scheduler Logs

REGISTRY
-----------------
Windows maintains five main registry hives in the path %SYSTEMROOT%\system32\config: SYSTEM, SECURITY, SOFTWARE, SAM, and DEFAULT

The root registry keys are as follows:
• HKEY_LOCAL_MACHINE (aka HKLM)
• HKEY_USERS (aka HKU)
• HKEY_CURRENT_USER (aka HKCU)
• HKEY_CURRENT_CONFIG (aka HKCC)
• HKEY_CLASSES_ROOT

• HKU\{SID} exists for each user security identifier (SID) on the system. The subkey for each SID maps to the 
corresponding user’s NTUSER.DAT hive file.
• HKU\{SID}_Classes exists for each user SID on the system. The subkey for each SID maps to the corresponding user’s 
USRCLASS.DAT hive file.
* HKEY_CURRENT_USER is simply a symbolic link to HKEY_USERS\{SID}\ for the user currently logged in to the console.
* HKEY_CURRENT_CONFIG maps to HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Hardware Profiles\XXXX, where XXXX is a four-digit number
representing the active profile. CurrentControlSet, referenced within the aforementioned path, is itself a link that 
points to HKLM\SYSTEM\ControlSetXXX, where XXX is a three-digit number representing the active configuration control set.
* HKEY_CLASSES_ROOT is presented as a merged set of subkeys from HKLM\Software\Classes and HKEY_CURRENT_USER\Software\Classes


* On a 64-bit version of Windows, 64-bit applications can access the registry path HKEY_LOCAL_MACHINE\SOFTWARE\. A 32-bit 
application may attempt to access the same path, but WOW64 will instead transparently redirect it to the 
path HKEY_LOCAL_MACHINE\SOFTWARE\WoW6432Node\

*** Images ***


Shim Cache
The Shim Cache, also known as the Application Compatibility Cache

HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\AppCompatCache\AppCompatCache

Services
Each service will have its own set of values and subkeys under HKLM\CurrentControlSet\services\{servicename}\,

The majority of Windows services are implemented as DLLs rather than standalone executable files. In order to properly load and
execute the code within these DLLs, Windows relies on a hosting process, svchost.exe.

 The Windows Service Control Manager (SCM), services.exe, is responsible for launching Windows services upon startup
 You can also invoke the Services Management snap-in, services.msc, from the Run menu to review and edit the configuration 
 of existing services.
 
  You can also use the tasklist /svc console command (native to Windows) to list the services running under each svchost.exe process. 
  
  • HKLM\SOFTWARE\Microsoft\​Windows\CurrentVersion\Run
• HKLM\SOFTWARE\Microsoft\Windows​\CurrentVersion\RunOnce
• HKEY_USERS\{SID}\SOFTWARE\Microsoft​\Windows\CurrentVersion\RunOnce
• HKEY_USERS\{SID}\SOFTWARE\Microsoft​\Windows\CurrentVersion\RunOnce


Active Setup  
Active Setup is a mechanism provided by Windows to facilitate software installation and update across all users on a system

• HKLM\SOFTWARE\Microsoft\​Active Setup\Installed Components
• HKEY_USERS\{SID}\SOFTWARE\​Microsoft\Active Setup\Installed Components
